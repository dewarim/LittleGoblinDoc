default.doesnt.match.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] ne correspond pas au pattern [{3}]
default.invalid.url.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] n'est pas une URL valide
default.invalid.creditCard.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] n'est pas un numéro de carte de crédit valide
default.invalid.email.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] n'est pas une adresse e-mail valide
default.invalid.range.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] n'est pas contenue dans l'intervalle [{3}] à [{4}]
default.invalid.size.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] n'est pas contenue dans l'intervalle [{3}] à [{4}]
default.invalid.max.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] est supérieure à la valeur maximum [{3}]
default.invalid.min.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] est inférieure à la valeur minimum [{3}]
default.invalid.max.size.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] est supérieure à la valeur maximum [{3}]
default.invalid.min.size.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] est inférieure à la valeur minimum [{3}]
default.invalid.validator.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] n'est pas valide
default.not.inlist.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] ne fait pas partie de la liste [{3}]
default.blank.message=La propriété [{0}] de la classe [{1}] ne peut pas être vide
default.not.equal.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] ne peut pas être égale à [{3}]
default.null.message=La propriété [{0}] de la classe [{1}] ne peut pas être nulle
default.not.unique.message=La propriété [{0}] de la classe [{1}] avec la valeur [{2}] doit être unique

default.paginate.prev=Précédent
default.paginate.next=Suivant
default.boolean.true=Vrai
default.boolean.false=Faux
default.date.format=aaaa-MM-jj HH:mm:ss z
default.number.format=0

default.created.message={0} {1} créé
default.updated.message={0} {1} mis à jour
default.deleted.message={0} {1} supprimé
default.not.deleted.message={0} {1} n'a pas pu être supprimé
default.not.found.message={0} n'a pas été trouvé avec l'id {1}
default.optimistic.locking.failure=Un aute utilisateur à mis à jour ce {0} pendant que vous l'éditiez

default.home.label=Accueil
default.list.label={0} Liste
default.add.label=Ajouter {0}
default.new.label=Nouveau {0}
default.create.label=Créer {0}
default.show.label=Afficher {0}
default.edit.label=Editer {0}

default.button.create.label=Créer
default.button.edit.label=Editer
default.button.update.label=Mettre à jour
default.button.delete.label=Supprimer
default.button.delete.confirm.message=Etes-vous sûr(e) ?

# Data binding errors. Use "typeMismatch.$className.$propertyName to customize (eg typeMismatch.Book.author)
typeMismatch.java.net.URL=La propriété {0} doit être une URL valide
typeMismatch.java.net.URI=La propriété {0} doit être une URL valide
typeMismatch.java.util.Date=La propriété {0} doit être une date valide
typeMismatch.java.lang.Double=La propriété {0} doit être un nombre valide
typeMismatch.java.lang.Integer=La propriété {0} doit être un nombre valide
typeMismatch.java.lang.Long=La propriété {0} doit être un nombre valide
typeMismatch.java.lang.Short=La propriété {0} doit être un nombre valide
typeMismatch.java.math.BigDecimal=La propriété {0} doit être un nombre valide
typeMismatch.java.math.BigInteger=La propriété {0} doit être un nombre valide

link.changes=GoblinDoc v0.8.0
hub.title=Little Goblin - Le framework du jeu en ligne
hub.hello=Little Goblin - Documentation
hub.intro.head=Introduction
hub.intro=Little Goblin est un framework de jeu en ligne open source conçu pour vous aider à créer des jeux en ligne. \
  Le but est de proposer une infrastructure complète qui vous permet d'implémenter rapidement vos idées, sans \
  avoir à vous occuper des fondamentaux tels que les comptes d'utilisateurs, la sécurité, les caractéristiques d'administration etc.. \
  Little Goblin est en cours de développement et ce site regroupe toute sa documentation.
hub.websites.head=Sites internet
hub.websites=Vous pouvez trouver plus d'informations, télécharger le code source et tester l'évolution du jeu sur différents sites internet. Little Goblin est une application \
  <a href="http://grails.org">Grails</a>, ce qui signifie qu'il est écrit en Groovy, Java, HTML, et JavaScript.
hub.sf.link=Little Goblin sur SourceForge
hub.sf.link.info=Téléchargements, bugs et caractéristiques, mailing list, forum
hub.test.link=Serveur test
hub.blog.link=Blog de test admin
link.imprint=Edition
link.privacy=Note sur la vie privée
link.home=Accueil
privacy.title=Note sur la vie privée - Little Goblin
privacy.head=Note sur la vie privée
privacy.notice=Ce site internet ne stocke aucune information personnelle vous concernant. Il utilise des cookies pour vous identifier \
  pendant votre visite de façon à faciliter votre navigation, vos recherches et améliorer votre expérience du site.\
  Le fichier log du serveur web ne stocke pas votre adresse IP.
imprint.title=Edition - Little Goblin
imprint.head=Edition
imprint.info=(requis par la loi allemande)<br>\
  Le domaine littlegoblin.de a été enregistré et est entretenu par :<br><br>\
  Ingo Wiarda<br>\
  Adresse : Bruchsaler Str. 6 / 75053 Gondelsheim / Allemagne<br>\
  Mail : ingo_wiarda@dewarim.de<br>\
  Téléphone : 016222389333<br><br>\
  N'hésitez pas à me contacter à propos de LittleGoblin - et ne m'envoyez pas de publicités.
hub.schedim.link=Schedim.de - le serveur test
hub.dewarim.link=Dewarim.com - le blog du développeur.

features.title=Caractéristiques de Little Goblin, le framework du jeu en ligne
features.head=Caractéristiques
features.intro=<strong>Cette page est en cours de développement. Des liens vers les pages des différentes caractéristiques seront ajoutés plus tard.</strong><br><br>\
  Little Goblin possède beaucoup de caractéristiques et certaines d'entre elles ont déjà été implémentées ! \
  Si vous avez des idées pour d'autres caractéristiques ou des suggestions pour améliorer celles qui existent déjà, n'hésitez pas à me contacter.
features.social.head=Caractéristiques sociales
features.social.intro=Les caractéristiques sociales aident les joueurs à rester en contact, leur permettent d'interagir, \
  de s'organiser, de rencontrer des gens et de se lancer des défis - autant qu'ils le veulent.
messaging.link=Envoyer des messages
chat.link=Chat
order.link=Ordres et guildes
features.quests=Quêtes
features.crafting=Artisanat et production
features.combat=Combat
features.administration=Administration
features.items=Objets et équipement
features.tech=Technologie et apprentissage
features.resources=Ressources
features.resources.intro=Little Goblin s'efforce de faciliter la gestion des ressources. Que vos pages contiennent des liens \
 vers des images, des fichiers CSS ou d'autres ressources, tout est administrable depuis l'interface graphique.
artist.link=Artistes et images
css.link=Feuilles de style en cascade et mise en page
features.tech.intro=Vous pouvez créer des arbres des technologies complexes avec les compétences requises pour l'artisanat, le combat et les quêtes.
skills.link=Compétences
academies.link=Académies
features.quests.intro=Le système des quêtes permet de créer des quêtes avec une seule étape du genre "Vous rencontrez un dragon. Vous mourez." ainsi \
  que des quêtes plus complexes d'une longueur arbitraire, avec des étapes aléatoires et des événements et des rencontres contrôlés par des scripts.
quest.link=Quêtes
script.link=Scripts de quêtes
features.items.intro=Un personnage joueur peut posséder et transporter un certain nombre d'objets ou les stocker dans sa maison. \
  Il peut les acheter, les vendre, les activer, les fabriquer et les utiliser. Les objets peuvent avoir des effets contrôlés par des scripts, par exemple les potions de soins \
  qui restaurent la vie de votre personnage.
changes.head=Liste des changements
changes.title=Liste des changements - Little Goblin Doc
changes.intro=Cette page répertorie les modifications du projet de documentation de Little Goblin. \
  Pour une liste des modifications de Little Goblin lui-même, veuillez consulter la <a href\="http\://dewarim.com/little-goblin/status/index.html">page de statut</a>.
changes.0.1=<em>2011-02-28</em>: v0.1 Version initiale. Mise en page de base et édition, note sur la vie privée, liste des caractéristiques.
features.link=Caractéristiques
hub.pages=Contenu
items.link=Objets et attributs d'objets
items.scripts=Objets scriptés
items.categories=Catégories d'objets
features.crafting.intro=L'artisanat ou, d'une manière générale, la fabrication d'objets, est un concept important dans les jeux en ligne. Avec Little Goblin, \
  vous pouvez créer des chaînes de production complexes qui permettent aux joueurs possédant certains pré-requis de fabriquer toutes sortes d'objets.
crafting.link=Artisanat
products.link=Produits
features.combat.intro=Little Goblin ne devait être qu'un fantasy game de combat mais il est devenu un framework complet de jeu en ligne - et \
  même si les caractéristiques de combat nécessitent encore du travail et des améliorations, les méthodes de combat, elles, fonctionnent.
combat.pve.link=Combat::PvE
combat.pvp.link=Combat::PvP
features.administration.intro=Un bon jeu en ligne doit pouvoir vous aider de deux manières quant à l'administration : la configuration et le bon fonctionnement du jeu.
admin.stuff.link=Caractéristiques pour créer votre propre jeu
admin.game.link=Caractéristiques pour lancer un jeu

architecture.title=Présentation de l'architecture de l'application Little Goblin
architecture.head=Little Goblin - présentation de l'architecture
architecture.intro=Little Goblin est une application Grails, ce qui implique une organisation respectant certaines conventions. \
  Cette page a pour but de vous donner un aperçu de l'organisation de ce type d'application. \
  Ouvrez le projet Little Goblin dans votre IDE (par exemple IntelliJ IDEA) et observez les fichiers du dossier.
architecture.link=Présentation de l'architecture
architecture.image.layout=Image présentant la vue de base des fichiers du projet.
arch.conf.head=conf (Fichiers de configuration)
arch.conf.intro=Le dossier conf contient les fichiers de configuration de Little Goblin.
arch.BootStrap.head=BootStrap
arch.BootStrap.desc=La classe BootStrap est exécutée au démarrage de l'application par le serveur. Si votre base de données est \
  vide, une implémentation complète sera créée à partir de ces petites parties. Si vous comptez développer votre propre jeu en utilisant \
  Little Goblin et que vous devez personnaliser beaucoup de choses, c'est dans ce fichier que vous pouvez créer de nouveaux objets ou modifier la configuration initiale.
arch.DataSource.head=DataSource
arch.DataSource.desc=Dans la classe DataSource votre base de données est définie et configurée. Vous pouvez utiliser PostgreSQL et MySQL \
  ou n'importe qu'elle autre base de données compatible avec Hibernate. Pendant le développement, le fichier DataSource est configuré pour supprimer le contenu de \
  la base de données et recréer toutes les tables. Ainsi, les modifications de la structure du programme seront automatiquement reportées dans la base de données.
arch.controller.head=controllers
arch.controller.desc=Little Goblin, comme la plupart des applications Grails, respecte le schéma MVC (Modèle-Vue-Contrôleur). Le contrôleur \
  se trouve entre le modèle de la base de données (et les objets du domaine) et la vue (ce qui est envoyé sur le navigateur de l'utilisateur en HTML). \
  Le rôle du contrôleur est de vérifier les événements de l'utilisateur, d'évaluer leurs effets en utilisant les objets du domaine de la \
  base de données avec l'aide de certains services et de retourner les résultats en fonction du modèle de vue défini.
arch.fightController.head=Exemple : le FightController (contrôleur de combat)
arch.fightController.desc=Le FightController est un morceau de code qui détermine le flux des événements lorsqu'un utilisateur commence un combat. Il charge le \
  PlayerCharacter (personnage joueur), le Mob (monstre), appelle d'autres classes (comme le FightService - service de combat) pour déterminer qui frappe le premier dans chaque manche du combat et \
  vérifie ce qu'il se passe. Ensuite, il répertorie tous les résultats et les informations du jeu dans un fichier modèle (appelé View) et le convertit en HTML. \
  Ce fichier est alors envoyé à l'utilisateur qui peut donc décider de ce qu'il veut faire en fonction de la nouvelle situation.
arch.domain.head=domain (classes)
arch.domain.desc1=Le dossier domain contient les classes du domaine, c'est-à-dire la structure des définitions de tous les objets du domaine \
  de Little Goblin. Un objet du domaine est un objet qui appartient à un domaine spécifique d'un programme. Par exemple, un jeu requiert un objet \
  joueur. Les chaînes de caractères, les entiers (1, 2, ...) et les boléens (vrai, faux) ne font pas partie d'un domaine spécifique. Ils sont en fait déjà définis \
  par les langages Groovy et Java. En revanche, tout ce qui sert à élaborer les plus grosses structures de ce framework de jeu est défini (en majorité) \
  dans le dossier domain - si ce sont des objets persistants.
arch.domain.desc2=Les objets persistants sont stockés dans les tables de la base de données et appelés en cas de besoin. Donc si vous ne vous connectez pas pour jouer, votre \
  personnage joueur restera toute la journée dans la base de données et ne changera probablement pas. Mais quand vous jouez, l'objet est sorti de la base de données \
  et les colonnes contenant son nom, son niveau d'expérience, son nombre de pièces d'or etc. sont transformées en objets qui seront modifiés. Une fois que les contrôleurs \
  et les classes de services ont modifié les informations, ces dernières sont de nouveau stockées dans la base de données sous forme d'objets persistants.
arch.domain.desc3=Les classes du domaine sont presque toutes connectées entre elles. Un mob (monstre) est créé à partir d'un modèle de mob, lui-même créé à partir d'une créature. \
  Et chaque modèle de mob peut posséder zéro, un ou plusieurs objets images qui lui sont associés. Et chaque image est reliée à un artiste - et à une licence. \
  En gros, dans Little Goblin, une classe de domaine définit deux propriétés de base d'un objet du domaine : sa valeur (un artiste a un nom, \
  tout comme un modèle de mob), et les relations qu'il a avec les autres objets du jeu. Certaines relations ne lient que deux objets (l'image à l'artiste), \
  d'autres lient un objet à beaucoup d'autres (un modèle de mob aux images) et d'autres encore lient de nombreux objets à d'autres nombreux objets (les catégories aux objets).
arch.i18n.head=i18n - Internationalisation
arch.i18n.desc1=Le dossier i18n contient les fichiers messages.properties des différentes langues dans lesquelles Little Goblin est ou sera \
  disponible. Un fichier message contient des paires clé-valeur, séparées par le signe "=". L'id message de ce paragraphe est "arch.i18n.desc". Si un fichier de langue \
  contient cet id message et une traduction, le texte sera affiché quand un utilisateur demandera cette page dans cette langue.
arch.i18n.desc2=Comment Little Goblin sait-il quelle langue vous souhaitez utiliser ? Votre navigateur envoie une liste de langues favorites au serveur. \
  Grails choisit alors la première de la liste (vu qu'il s'agit probablement de la plus importante) et quand il doit afficher une page avec \
  un id message à l'intérieur, il regarde si une traduction est disponible dans le fichier de la langue. Dans le cas contraire, c'est le message par défaut (en anglais) qui est affiché.
arch.i18n.desc3=Pour le moment, toutes les traductions se trouvent à l'intérieur de ces fichiers message. Plus tard, elles seront probablement transférées dans la \
  base de données, ce qui facilitera leur modification et l'ajout dynamique de nouveaux id message. Si vous ajoutez un id message dans le fichier de référence \
  (messages.properties), ajoutez-le à la fin de façon à ce que les traducteurs puissent facilement repérer les nouvelles entrées. (Il serait également judicieux \
  de garder un journal de modification sous forme de commentaires à l'intérieur des fichiers de façon à savoir quand les entrées ont été modifiées).
arch.services.head=services
arch.services.desc=Les classes de service servent à encadrer certaines parties de la logique du jeu. Elles sont également souvent utilisées pour accéder à des méthodes réutilisables \
  par plusieurs contrôleurs. Par exemple, le FightController vérifie si un personnage joueur ou un monstre est encore vivant et détermine l'ordre des \
  événements pendant le combat. Alors que les objets de domaine peuvent avoir plusieurs classes de domaine, les services n'ont qu'une seule classe et ils ne sont créés qu'une seule fois. \
  Ils ne stockent pas leur état dans la base de données puisque, normalement, ils n'ont pas d'état. Leur unique rôle est de servir.
arch.views.head=views
arch.views.desc1=Une View (vue) est un fichier qui décrit comment les informations collectées par le contrôleur à partir des objets de domaine modèle doivent être affichées. \
  Vous connaissez peut-être les fichiers ASP, PHP ou JSP qui combinent (un peu) de code de programmation et du code HTML. Les GSP (Groovy Server Pages) ne sont pas très différentes. \
  Ces fichiers, qui peuvent inclure des sous-fichiers pour créer une page complète, définissent l'aspect de l'interface utilisateur de Little Goblin. Si vous voulez \
  modifier l'organisation des éléments, vous devez éditer les views.
arch.views.desc2=Notez que certains fichiers dans les views n'ont pas de header HTML. C'est parce qu'ils sont utilisés par un code AJAX dans les contrôleurs. Ces parties de code \
  sont retournées lorsqu'un utilisateur effectue une action, par exemple lorsqu'il achète un objet et s'attend à voir son nombre de pièces d'or diminuer ou à recevoir un message. Dans les cas où \
  très peu d'informations sont modifiées, seulement une partie de la page est rechargée en JavaScript. C'est beaucoup plus rapide, mais la mise en page devient plus \
  complexe. Pour savoir comment s'organise le tout, regardez les fichiers de départ - les fichiers appelés show.gsp ou index.gsp vous donnent un bon aperçu.

changes.0.2=<em>2011-03-25</em>: v0.2 Ajout d'une page de présentation de l'architecture et des vidéos.
video.link=Multimédia
click.to.enlarge=Cliquez sur l'image ci-dessous pour l'afficher en grand.
architecture.big.layout=Cette page est une représentation graphique basique de l'architecture.

video.configure.intellij=Configurer Little Goblin en tant que projet dans IntelliJ IDEA
video.configure.intellij.desc=Explique comment importer le projet Little Goblin dans l'IDE IntelliJ IDEA. Cela suppose que vous avez déjà \
  téléchargé le code source et configuré la base de données (voir : <a href="http://dewarim.com/browsergame/development-resources/basic-requirements">Pré-requis</a>) \
  Vous pouvez demander une clé de licence Open Source pour IntelliJ IDEA à l'administrateur du projet si vous souhaitez participer au développement de ce framework de jeu en ligne.
video.configure.intellij.mp4=en MP4
video.head=Vidéos
video.intro=Cette page regroupe les liens vers des tutoriels vidéo et d'autres fichiers multimédias qui vous aideront à mieux connaître Little Goblin visuellement.
video.translate.lg=Comment traduire Little Goblin
video.translate.lg.desc=Un tutoriel sur YouTube expliquant comment traduire les messages de Little Goblin avec IntelliJ IDEA.
video.as.mp4=Version MP4
changes.0.3=<em>2011-03-29</em>: v0.3 Ajout d'un lien vers une nouvelle vidéo (traduire LG).
changes.0.4=<em>2011-04-03</em>: v0.4 Ajout d'un lien vers une nouvelle vidéo (éditer LG) et section outils.
changes.0.5=<em>2011-07-13</em>: v0.5 Ajout d'une page sur l'équipe.
video.edit.lg=Editer Little Goblin
video.edit.lg.desc=Comment faire des modifications et les envoyer vers le dépôt Subversion sur Sourceforge.net

tools.title=Outils utilisés par le framework de jeu en ligne Little Goblin
tools.head=Outils utilisés par Little Goblin
tools.intro=Cette page contient une liste d'outils dont vous aurez besoin pour travailler sur Little Goblin lui-même ou \
  sur un projet de jeu basé sur le framework Little Goblin.
tools.ide.head=IDE (Integrated Development Environment - Environnement de développement intégré)
tools.intellij=<a href="http://www.jetbrains.com/idea/">IntelliJ IDEA</a>
tools.intellij.desc=IntelliJ IDEA de Jetbrains est un excellent IDE, approprié pour Grails, Java, Groovy et pour beaucoup d'autres types \
  de développement. Une licence open source spécifique au projet est disponible si vous êtes membre de l'équipe de développement du projet Little Goblin et \
  que vous ne possédez pas encore la version complète du logiciel.
tools.sts=<a href="http://www.springsource.com/developer/sts">STS - SpringSource Tool Suite</a>
tools.sts.desc=Un IDE Java/Groovy/Grails basé sur Eclipse, développé par l'entreprise qui produit Groovy et Grails.
tools.eclipse=<a href="http://eclipse.org/">Eclipse</a>
tools.eclipse.desc=Eclipse est un IDE gratuit qui propose de nombreux modules pour l'intégration de subversion par exemple. Vous pouvez utiliser Eclipse \
  mais il n'offre pas toutes les possibilités d'intégration Grails proposées par les autres IDE.
tools.link=Outils

team.head=Membres actuels de l'équipe et anciens collaborateurs
team.current.head=Equipe actuelle

team.former.head=Anciens collaborateurs
team.former.info=Hey, personne n'est parti jusqu'à maintenant - c'est qu'on doit vraiment être bons ! Rejoignez-nous, on ne mord pas !
team.title=Little Goblin : membres actuels de l'équipe et anciens collaborateurs
team.dewarim=dewarim // Ingo Wiarda
team.dewarim.info=Fondateur du projet et administrateur. Chef d'orchestre du projet. Joue \
  à des jeux traditionnels (RPG, M:TG, jeux de société) ainsi qu'à des jeux sur ordinateur (SC2, LoL, et bien d'autres) - \
  de temps en temps, parce que coder des logiciels open source c'est bien plus amusant !
team.dewarim.homepage=Sites internet : <a href="http://dewarim.com">dewarim.com</a> [code,en] <a href="http://dewarim.de">dewarim.de</a> [personnel,de]
team.task.coder=Implémentation et design du programme
team.task.game.design=Design du jeu
team.task.administration=Administration
team.task.hosting=Hébergement
team.tasks=Tâches
team.jellina.head=jellina
team.keyznotized.head=keyznotized // Pauline Fratczak
team.keyznotized.info=Traductrice et programmatrice débutante qui ne demande qu'à s'améliorer. Grande fan de jeux vidéo (GTA, CoD, et à peu près \
  n'importe quel jeu d'action sur PS3 et quelques jeux en ligne). Apprécie les joies du codage open source !
team.siposoft.head=siposoft
team.link=L'équipe de Little Goblin
changes.0.6=<em>2011-07-21</em>: 0.6 Ajout des informations sur Pauline Fratczak ; ajout de la page sur la Grande Mêlée et la liste de ses caractéristiques.

melee.title=Little Goblin - Grande Mêlée
melee.head=Grande Mêlée
melee.intro=La Grande Mêlée est l'occasion pour les joueurs d'affronter les personnages des autres joueurs dans un combat \
  sans restriction jusqu'à ce qu'il ne reste plus qu'un homme (ou une femme - ou un gobelin). Vous vous inscrivez et choisissez à chaque tour qui vous voulez attaquer et comment.
melee.1=Le combat dure jusqu'à ce qu'un joueur soit déclaré vainqueur. Le jeu attend au moins une minute pour passer d'une manche \
  à l'autre. Pendant ce temps, vous pouvez sélectionner une action de combat avec votre personnage. Si vous n'en choisissez aucune, \
  le jeu sélectionnera aléatoirement votre adversaire et votre personnage attaquera automatiquement. Ainsi, vous avez une chance de gagner, \
  même si les circonstances vous ont empêché de choisir votre action à temps.
melee.2=Les possibilités d'actions de combat sont : attaquer un autre personnage joueur, utiliser un objet sur ou contre un personnage (ou vous-même) ou \
  prendre la fuite. \
  Vous combattez avec les obets que vous transportez et vous ne pouvez pas les recharger une fois que la mêlée a commencé. Vous pouvez quitter la mêlée à tout moment \
  sans recevoir de pénalité. Les joueurs qui quittent la mêlée ne figureront pas sur le tableau d'honneur et devront attendre la fin de la mêlée \
  pour pouvoir s'inscrire à la prochaine. \
  Il est possible d'aider d'autres joueurs et de combiner des attaques. Cependant, la mêlée reste un combat en chacun pour soi \
  donc surveillez vos arrières et faites attention aux attaques de ceux qui se disent vos amis. \
  N'hésitez pas à attaquer des membres de votre ordre - il ne doit en rester qu'un !
melee.status=Note : pour le moment, certaines des caractéristiques (utilisation d'objet, tableau d'honneur) n'ont pas encore été implémentées.
